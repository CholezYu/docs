import{_ as i,r as o,o as l,c as u,d as n,a,w as c,e as s,b as t}from"./app-lrdbXBCv.js";const r={},k=t(`<h2 id="canvas" tabindex="-1"><a class="header-anchor" href="#canvas" aria-hidden="true">#</a> Canvas</h2><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> canvas <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&quot;canvas&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> ctx <span class="token operator">=</span> canvas<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">&quot;2d&quot;</span><span class="token punctuation">)</span>

<span class="token comment">// 确定起点</span>
ctx<span class="token punctuation">.</span><span class="token function">moveTo</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span>

<span class="token comment">// 移动到新的位置</span>
ctx<span class="token punctuation">.</span><span class="token function">lineTo</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span>
ctx<span class="token punctuation">.</span><span class="token function">lineTo</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span>

<span class="token comment">// 移动到起点</span>
ctx<span class="token punctuation">.</span><span class="token function">closePath</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment">// 设置填充颜色</span>
ctx<span class="token punctuation">.</span>fillStyle <span class="token operator">=</span> <span class="token string">&quot;red&quot;</span>
<span class="token comment">// 填充</span>
ctx<span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment">// 绘制</span>
ctx<span class="token punctuation">.</span><span class="token function">stroke</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> canvas <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&quot;canvas&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> ctx <span class="token operator">=</span> canvas<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">&quot;2d&quot;</span><span class="token punctuation">)</span>

<span class="token comment">// 设置填充颜色为红色</span>
ctx<span class="token punctuation">.</span>fillStyle <span class="token operator">=</span> <span class="token string">&quot;red&quot;</span>

<span class="token comment">// 在画布上绘制一个红色的矩形</span>
ctx<span class="token punctuation">.</span><span class="token function">fillRect</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="svg" tabindex="-1"><a class="header-anchor" href="#svg" aria-hidden="true">#</a> Svg</h2><h2 id="web-api" tabindex="-1"><a class="header-anchor" href="#web-api" aria-hidden="true">#</a> Web API</h2><h3 id="dom" tabindex="-1"><a class="header-anchor" href="#dom" aria-hidden="true">#</a> DOM</h3><p>操作 HTML 文档的结构、样式和内容。</p>`,7),d=n("h3",{id:"fetch",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#fetch","aria-hidden":"true"},"#"),s(" Fetch")],-1),v=n("p",null,"现代网络请求方式。",-1),m=t(`<h3 id="history" tabindex="-1"><a class="header-anchor" href="#history" aria-hidden="true">#</a> History</h3><p>允许操作浏览器历史记录。包括 <code>popstate</code> 事件和 <code>pushState</code>、<code>replaceState</code> 方法。</p><div class="hint-container tip"><p class="hint-container-title">提示</p><p>Vue Router 的 History Mode 是基于此实现的。</p></div><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// 监听浏览器历史记录改变</span>
<span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;popstate&quot;</span><span class="token punctuation">,</span> event <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> <span class="token comment">/* ... */</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// 向浏览器历史记录中添加一个新状态，实现无刷新跳转</span>
<span class="token comment">// =&gt; router.push(&quot;/home&quot;)</span>
history<span class="token punctuation">.</span><span class="token function">pushState</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token string">&quot;/home&quot;</span><span class="token punctuation">)</span>

<span class="token comment">// 替换当前的历史记录状态</span>
<span class="token comment">// =&gt; router.replace(&quot;/home&quot;)</span>
history<span class="token punctuation">.</span><span class="token function">replaceState</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token string">&quot;/home&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="filereader" tabindex="-1"><a class="header-anchor" href="#filereader" aria-hidden="true">#</a> FileReader</h3><p>允许网页访问用户的文件系统，读取、预览文件内容。适用于文件上传、读取本地文件等功能。</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&quot;file&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;change&quot;</span><span class="token punctuation">,</span> event <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> file <span class="token operator">=</span> event<span class="token punctuation">.</span>target<span class="token punctuation">.</span>files<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
  <span class="token keyword">const</span> reader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  reader<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;load&quot;</span><span class="token punctuation">,</span> event <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> result <span class="token operator">=</span> event<span class="token punctuation">.</span>target<span class="token punctuation">.</span>result
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token comment">// 读取文件内容</span>
  reader<span class="token punctuation">.</span><span class="token function">readAsText</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="websocket" tabindex="-1"><a class="header-anchor" href="#websocket" aria-hidden="true">#</a> WebSocket</h3><p>提供双向通信通道，用于实时数据传输。常用于聊天室、游戏等需要实时更新的应用。</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> socket <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WebSocket</span><span class="token punctuation">(</span><span class="token string">&quot;ws://localhost:8000&quot;</span><span class="token punctuation">)</span>

<span class="token comment">// 连接成功</span>
socket<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;open&quot;</span><span class="token punctuation">,</span> event <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> <span class="token comment">/* 初始化操作 */</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// 接收消息</span>
socket<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;message&quot;</span><span class="token punctuation">,</span> event <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> result <span class="token operator">=</span> event<span class="token punctuation">.</span>data
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// 断开连接</span>
socket<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;close&quot;</span><span class="token punctuation">,</span> event <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> <span class="token comment">/* 重新连接 */</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// 连接失败</span>
socket<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;error&quot;</span><span class="token punctuation">,</span> event <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> <span class="token comment">/* 检查网络 */</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="web-worker" tabindex="-1"><a class="header-anchor" href="#web-worker" aria-hidden="true">#</a> Web Worker</h3><p>允许在后台线程中运行 JavaScript 代码，不会阻塞主线程。适用于处理大量数据和执行复杂计算。</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> worker <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Worker</span><span class="token punctuation">(</span><span class="token string">&quot;worker.js&quot;</span><span class="token punctuation">)</span>

<span class="token comment">// 向 Worker 发送消息</span>
worker<span class="token punctuation">.</span><span class="token function">postMessage</span><span class="token punctuation">(</span><span class="token punctuation">{</span> sum<span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// 接收 Worker 的消息</span>
worker<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;message&quot;</span><span class="token punctuation">,</span> event <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> result<span class="token punctuation">,</span> time <span class="token punctuation">}</span> <span class="token operator">=</span> event<span class="token punctuation">.</span>data
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Worker 文件。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>self<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;message&quot;</span><span class="token punctuation">,</span> <span class="token parameter">event</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> start <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">let</span> result <span class="token operator">=</span> event<span class="token punctuation">.</span>data<span class="token punctuation">.</span>sum
  <span class="token comment">// 执行计算任务</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">100000000</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
   result <span class="token operator">+=</span> i
  <span class="token punctuation">}</span>
  <span class="token comment">// 向主线程发送消息</span>
  self<span class="token punctuation">.</span><span class="token function">postMessage</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    result<span class="token punctuation">,</span>
    <span class="token literal-property property">time</span><span class="token operator">:</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> start
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="service-worker" tabindex="-1"><a class="header-anchor" href="#service-worker" aria-hidden="true">#</a> Service Worker</h3><p>提供一种在后台处理网络请求、缓存资源和执行其他任务的能力。适用于构建离线 Web 应用和提高性能。</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">if</span> <span class="token punctuation">(</span>navigator<span class="token punctuation">.</span>serviceWorker<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> registration <span class="token operator">=</span> <span class="token keyword">await</span> navigator<span class="token punctuation">.</span>serviceWorker<span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span><span class="token string">&quot;service-worker.js&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Service Worker 文件。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token constant">CACHE_NAME</span> <span class="token operator">=</span> <span class="token string">&#39;my-site-cache-v1&#39;</span>
<span class="token keyword">const</span> urlsToCache <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token string">&quot;/&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;/styles/main.css&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;/script/main.js&quot;</span>
<span class="token punctuation">]</span>

self<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;install&quot;</span><span class="token punctuation">,</span> <span class="token parameter">event</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  event<span class="token punctuation">.</span><span class="token function">waitUntil</span><span class="token punctuation">(</span>caches<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token constant">CACHE_NAME</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">cache</span> <span class="token operator">=&gt;</span> cache<span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span>urlsToCache<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token comment">// 强制新的 Service Worker 生效</span>
    <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> self<span class="token punctuation">.</span><span class="token function">skipWaiting</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// 更新 Service Worker</span>
self<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;activate&quot;</span><span class="token punctuation">,</span> <span class="token parameter">event</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  event<span class="token punctuation">.</span><span class="token function">waitUntil</span><span class="token punctuation">(</span>
    caches<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">cacheNames</span> <span class="token operator">=&gt;</span> Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span>
      cacheNames
        <span class="token comment">// 通过清理旧缓存来确保新资源加载</span>
        <span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">cacheName</span> <span class="token operator">=&gt;</span> cacheName<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">&quot;my-site-cache-&quot;</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> cacheName <span class="token operator">!==</span> <span class="token constant">CACHE_NAME</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">cacheName</span> <span class="token operator">=&gt;</span> caches<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>cacheName<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

self<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;fetch&quot;</span><span class="token punctuation">,</span> <span class="token parameter">event</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  event<span class="token punctuation">.</span><span class="token function">respondWith</span><span class="token punctuation">(</span>
    caches<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>request<span class="token punctuation">)</span>
      <span class="token comment">// 如果在缓存中找到匹配的请求，直接返回缓存的响应</span>
      <span class="token comment">// 如果未在缓存中找到匹配的请求，则从网络请求</span>
      <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">response</span> <span class="token operator">=&gt;</span> response <span class="token operator">?</span> response <span class="token operator">:</span> <span class="token function">fetch</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>request<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// 处理推送通知</span>
self<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;push&quot;</span><span class="token punctuation">,</span> <span class="token parameter">event</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> title <span class="token operator">=</span> <span class="token string">&quot;Push Notification&quot;</span>
  <span class="token keyword">const</span> options <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">body</span><span class="token operator">:</span> event<span class="token punctuation">.</span>data<span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token literal-property property">icon</span><span class="token operator">:</span> <span class="token string">&quot;/images/icon.png&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">badge</span><span class="token operator">:</span> <span class="token string">&quot;/images/badge.png&quot;</span>
  <span class="token punctuation">}</span>
  
  event<span class="token punctuation">.</span><span class="token function">waitUntil</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>registration<span class="token punctuation">.</span><span class="token function">showNotification</span><span class="token punctuation">(</span>title<span class="token punctuation">,</span> options<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="performance" tabindex="-1"><a class="header-anchor" href="#performance" aria-hidden="true">#</a> Performance</h3><p>提供对 Web 应用性能的访问和分析。</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// 标记一个性能测量点</span>
performance<span class="token punctuation">.</span><span class="token function">mark</span><span class="token punctuation">(</span><span class="token string">&quot;start&quot;</span><span class="token punctuation">)</span>

<span class="token comment">// 进行一些（耗时）操作</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">1000000</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">/* ... */</span> <span class="token punctuation">}</span>

<span class="token comment">// 标记结束点</span>
performance<span class="token punctuation">.</span><span class="token function">mark</span><span class="token punctuation">(</span><span class="token string">&quot;end&quot;</span><span class="token punctuation">)</span>

<span class="token comment">// 测量从开始到结束的时间</span>
performance<span class="token punctuation">.</span><span class="token function">measure</span><span class="token punctuation">(</span><span class="token string">&quot;custom_measure&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;start&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;end&quot;</span><span class="token punctuation">)</span>

<span class="token comment">// 获取所有性能测量</span>
<span class="token keyword">const</span> measures <span class="token operator">=</span> performance<span class="token punctuation">.</span><span class="token function">getEntriesByType</span><span class="token punctuation">(</span><span class="token string">&quot;measure&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="requestanimationframe" tabindex="-1"><a class="header-anchor" href="#requestanimationframe" aria-hidden="true">#</a> RequestAnimationFrame</h3><p>以更好的性能执行动画。适合用于实现高效和平滑的动画效果。</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// 兼容处理</span>
<span class="token keyword">const</span> rAF <span class="token operator">=</span> window<span class="token punctuation">.</span>requestAnimationFrame <span class="token operator">||</span> <span class="token punctuation">(</span>func <span class="token operator">=&gt;</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span>func<span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token keyword">let</span> animationId <span class="token operator">=</span> <span class="token keyword">null</span>

<span class="token keyword">const</span> <span class="token function-variable function">scrollToTop</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token function-variable function">cubic</span> <span class="token operator">=</span> <span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> Math<span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> <span class="token function-variable function">easeInOutCubic</span> <span class="token operator">=</span> <span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> value <span class="token operator">&lt;</span> <span class="token number">0.5</span>
    <span class="token operator">?</span> <span class="token function">cubic</span><span class="token punctuation">(</span>value <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span>
    <span class="token operator">:</span> <span class="token number">1</span> <span class="token operator">-</span> <span class="token function">cubic</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">-</span> value<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span>
  
  <span class="token keyword">const</span> el <span class="token operator">=</span> document<span class="token punctuation">.</span>documentElement
  
  <span class="token keyword">const</span> beginTime <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> beginValue <span class="token operator">=</span> el<span class="token punctuation">.</span>scrollTop
  <span class="token keyword">const</span> <span class="token function-variable function">animate</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> progress <span class="token operator">=</span> <span class="token punctuation">(</span>Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> beginTime<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">500</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>progress <span class="token operator">&lt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      el<span class="token punctuation">.</span>scrollTop <span class="token operator">=</span> beginValue <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">-</span> <span class="token function">easeInOutCubic</span><span class="token punctuation">(</span>progress<span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token comment">// \`animate\` 会在每一帧被调用，用于更新动画状态和绘制新的动画帧，然后请求下一帧</span>
      animationId <span class="token operator">=</span> <span class="token function">rAF</span><span class="token punctuation">(</span>animate<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">else</span> <span class="token punctuation">{</span>
      el<span class="token punctuation">.</span>scrollTop <span class="token operator">=</span> <span class="token number">0</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// 开始动画</span>
  animationId <span class="token operator">=</span> <span class="token function">rAF</span><span class="token punctuation">(</span>animate<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> <span class="token function-variable function">stopAnimation</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// 取消动画</span>
  <span class="token function">cancelAnimationFrame</span><span class="token punctuation">(</span>animationId<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="animations" tabindex="-1"><a class="header-anchor" href="#animations" aria-hidden="true">#</a> Animations</h3><p>直接控制 CSS 动画和 SVG 动画。提供更高的动画性能和控制。</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// 创建一个动画</span>
document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;animation&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">animate</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
  <span class="token punctuation">{</span> transform<span class="token operator">:</span> <span class="token string">&quot;translateY(0px)&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> transform<span class="token operator">:</span> <span class="token string">&quot;translateY(100px)&quot;</span> <span class="token punctuation">}</span>
<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  duration<span class="token operator">:</span> <span class="token number">1000</span><span class="token punctuation">,</span>
  easing<span class="token operator">:</span> <span class="token string">&quot;ease-out&quot;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="mutationobserver" tabindex="-1"><a class="header-anchor" href="#mutationobserver" aria-hidden="true">#</a> MutationObserver</h3><p>监测 DOM 树中的更改。比传统的 DOM 事件监听更高效，适用于复杂的 DOM 操作。</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> observer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MutationObserver</span><span class="token punctuation">(</span>mutations <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  mutations<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>mutation <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Mutation observed: &quot;</span><span class="token punctuation">,</span> mutation<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// 观察元素</span>
observer<span class="token punctuation">.</span><span class="token function">observe</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&quot;obElement&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  attributes<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  childList<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  subtree<span class="token operator">:</span> <span class="token boolean">true</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// 停止观察</span>
observer<span class="token punctuation">.</span><span class="token function">disconnect</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="intersectionobserver" tabindex="-1"><a class="header-anchor" href="#intersectionobserver" aria-hidden="true">#</a> IntersectionObserver</h3><p>监测一个元素相对于其祖先元素或顶级文档视口的可见性变化。适用于懒加载图片、无限滚动等。</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> observer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">IntersectionObserver</span><span class="token punctuation">(</span>entries <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  entries<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>entry <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>entry<span class="token punctuation">.</span>isIntersecting<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Element is in view: &quot;</span><span class="token punctuation">,</span> entry<span class="token punctuation">.</span>target<span class="token punctuation">)</span>
      <span class="token comment">// observer.unobserve(entry.target) // 停止观察</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// 观察元素</span>
observer<span class="token punctuation">.</span><span class="token function">observe</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&quot;obElement&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clipboard" tabindex="-1"><a class="header-anchor" href="#clipboard" aria-hidden="true">#</a> Clipboard</h3><p>读写剪贴板的内容。适用于实现复制、粘贴功能。</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">if</span> <span class="token punctuation">(</span>navigator<span class="token punctuation">.</span>clipboard<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">await</span> navigator<span class="token punctuation">.</span>clipboard<span class="token punctuation">.</span><span class="token function">writeText</span><span class="token punctuation">(</span><span class="token string">&quot;Hello World!&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token comment">// 兼容处理</span>
<span class="token keyword">else</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> textarea <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&quot;textarea&quot;</span><span class="token punctuation">)</span>
  document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>textarea<span class="token punctuation">)</span>
  textarea<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token string">&quot;Hello World!&quot;</span>
  textarea<span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  document<span class="token punctuation">.</span><span class="token function">execCommand</span><span class="token punctuation">(</span><span class="token string">&quot;copy&quot;</span><span class="token punctuation">)</span>
  document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">removeChild</span><span class="token punctuation">(</span>textarea<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="indexeddb" tabindex="-1"><a class="header-anchor" href="#indexeddb" aria-hidden="true">#</a> IndexedDB</h3><p>提供一个低级 API，用于客户端持久化存储大量结构化数据。适用于离线应用和复杂的数据存储需求。</p><div class="hint-container warning"><p class="hint-container-title">注意</p><p>前端数据库安全性较低。</p></div><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// 打开一个名为 &quot;my-db&quot; 的 IndexedDB 数据库</span>
<span class="token keyword">const</span> request <span class="token operator">=</span> indexedDB<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">&quot;my-db&quot;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>

<span class="token comment">// 数据库升级时的回调函数</span>
request<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;upgradeneeded&quot;</span><span class="token punctuation">,</span> event <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> db <span class="token operator">=</span> event<span class="token punctuation">.</span>target<span class="token punctuation">.</span>result
  <span class="token comment">// 创建一个名为 &quot;users&quot; 的对象存储</span>
  db<span class="token punctuation">.</span><span class="token function">createObjectStore</span><span class="token punctuation">(</span><span class="token string">&quot;users&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> keyPath<span class="token operator">:</span> <span class="token string">&quot;id&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// 数据库打开成功时的回调函数</span>
request<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;success&quot;</span><span class="token punctuation">,</span> event <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> db <span class="token operator">=</span> event<span class="token punctuation">.</span>target<span class="token punctuation">.</span>result
  <span class="token keyword">const</span> transaction <span class="token operator">=</span> db<span class="token punctuation">.</span><span class="token function">transaction</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&quot;users&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&quot;readwrite&quot;</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> store <span class="token operator">=</span> transaction<span class="token punctuation">.</span><span class="token function">objectStore</span><span class="token punctuation">(</span><span class="token string">&quot;users&quot;</span><span class="token punctuation">)</span>
  <span class="token comment">// 添加一个用户对象</span>
  store<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">{</span> id<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> name<span class="token operator">:</span> <span class="token string">&quot;John Doe&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="requestfullscreen" tabindex="-1"><a class="header-anchor" href="#requestfullscreen" aria-hidden="true">#</a> RequestFullscreen</h3><p>允许网页进入全屏模式。适用于视频播放、游戏等。</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> screen <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&quot;screen&quot;</span><span class="token punctuation">)</span>

<span class="token comment">// 进入全屏模式</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>screen<span class="token punctuation">.</span>requestFullscreen<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  screen<span class="token punctuation">.</span><span class="token function">requestFullscreen</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>screen<span class="token punctuation">.</span>webkitRequestFullscreen<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">/* Safari */</span>
  screen<span class="token punctuation">.</span><span class="token function">webkitRequestFullscreen</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>screen<span class="token punctuation">.</span>msRequestFullscreen<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">/* IE11 */</span>
  screen<span class="token punctuation">.</span><span class="token function">msRequestFullscreen</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">// 退出全屏模式</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>document<span class="token punctuation">.</span>exitFullscreen<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  document<span class="token punctuation">.</span><span class="token function">exitFullscreen</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>document<span class="token punctuation">.</span>webkitExitFullscreen<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">/* Safari */</span>
  document<span class="token punctuation">.</span><span class="token function">webkitExitFullscreen</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>document<span class="token punctuation">.</span>msExitFullscreen<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">/* IE11 */</span>
  document<span class="token punctuation">.</span><span class="token function">msExitFullscreen</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,45),b={id:"screen-orientation",tabindex:"-1"},g=n("a",{class:"header-anchor",href:"#screen-orientation","aria-hidden":"true"},"#",-1),h=t(`<p>获取和锁定屏幕方向。适用于需要特定方向显示的应用，如游戏和视频播放。</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// 查询当前屏幕方向</span>
screen<span class="token punctuation">.</span>orientation<span class="token punctuation">.</span><span class="token keyword">type</span> <span class="token comment">// &quot;landscape-primary&quot;</span>

<span class="token comment">// 锁定屏幕方向为横向</span>
<span class="token keyword">await</span> screen<span class="token punctuation">.</span>orientation<span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token string">&quot;landscape&quot;</span><span class="token punctuation">)</span>

<span class="token comment">// 解锁方向</span>
<span class="token keyword">await</span> screen<span class="token punctuation">.</span>orientation<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="geolocation" tabindex="-1"><a class="header-anchor" href="#geolocation" aria-hidden="true">#</a> Geolocation</h3><p>获取用户的地理位置（需要得到用户的许可）。适用于地图、定位等应用。</p><div class="hint-container warning"><p class="hint-container-title">注意</p><p>只支持 HTTPS 和 File 协议。</p></div><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>navigator<span class="token punctuation">.</span>geolocation<span class="token punctuation">.</span><span class="token function">getCurrentPosition</span><span class="token punctuation">(</span>position <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  position <span class="token comment">/* GeolocationPosition {
    coords: {
      accuracy: 292
      altitude: null
      altitudeAccuracy: null
      heading: null
      latitude: 28.6778185
      longitude: 115.9601825
      speed: null
    },
    timestamp: 1720594636490
  } */</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> positionError <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> <span class="token comment">/* error */</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6),f={id:"deviceorientation",tabindex:"-1"},y=n("a",{class:"header-anchor",href:"#deviceorientation","aria-hidden":"true"},"#",-1),w=t(`<p>获取设备的方向和运动信息。适用于增强现实（AR）、虚拟现实（VR）和游戏等。</p><div class="hint-container warning"><p class="hint-container-title">注意</p><p>只支持带有陀螺仪的设备（手机、平板等移动设备）。</p><p>Safari 和微信内部浏览器只支持 HTTPS 协议。</p></div><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;deviceorientation&quot;</span><span class="token punctuation">,</span> event <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  event <span class="token comment">/* DeviceOrientationEvent {
    alpha: 0, // Z 轴，设备围绕屏幕中心旋转的角度（指南针），[0, 360)
    beta: 0, // X 轴，设备向前或向后倾斜的角度，[-180, 180]
    gama: 0 // Y 轴，设备向左或向右翻转的角度，[-90, 90]
  } */</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="battery" tabindex="-1"><a class="header-anchor" href="#battery" aria-hidden="true">#</a> Battery</h3><p>提供设备电池状态的信息。适用于优化电池消耗的应用。</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// 获取设备电池信息</span>
<span class="token keyword">const</span> battery <span class="token operator">=</span> navigator<span class="token punctuation">.</span><span class="token function">getBattery</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment">/* BatteryManager {
  charging: true,
  chargingTime: 0,
  dischargingTime: Infinity,
  level: 1, // 电池电量（100%）
  onchargingchange: null,
  onchargingtimechange: null,
  ondischargingtimechange: null,
  onlevelchange: null
} */</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="notification" tabindex="-1"><a class="header-anchor" href="#notification" aria-hidden="true">#</a> Notification</h3><p>允许网页向用户发送桌面通知（需要得到用户的许可）。适用于消息提醒等。</p><div class="hint-container warning"><p class="hint-container-title">注意</p><p>只支持 HTTPS 协议。</p></div><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> <span class="token function-variable function">showNotification</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// 显示通知</span>
  <span class="token keyword">const</span> notification <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Notification</span><span class="token punctuation">(</span><span class="token string">&quot;Hello!&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    body<span class="token operator">:</span> <span class="token string">&quot;This is a notification from your web app.&quot;</span><span class="token punctuation">,</span>
    icon<span class="token operator">:</span> <span class="token string">&quot;https://via.placeholder.com/48&quot;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">// 检查用户是否已授权显示通知</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>Notification<span class="token punctuation">.</span>permission <span class="token operator">===</span> <span class="token string">&quot;granted&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">showNotification</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>Notification<span class="token punctuation">.</span>permission <span class="token operator">!==</span> <span class="token string">&quot;denied&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// 请求用户授权显示通知</span>
  <span class="token keyword">const</span> permission <span class="token operator">=</span> <span class="token keyword">await</span> Notification<span class="token punctuation">.</span><span class="token function">requestPermission</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>permission <span class="token operator">===</span> <span class="token string">&quot;granted&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">showNotification</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="vibrate" tabindex="-1"><a class="header-anchor" href="#vibrate" aria-hidden="true">#</a> Vibrate</h3><p>控制设备的振动功能。适用于游戏和通知。</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// 使设备振动 1 秒</span>
navigator<span class="token punctuation">.</span><span class="token function">vibrate</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span>

<span class="token comment">// 振动模式：振动 200ms，停止 100ms，再振动 200ms</span>
navigator<span class="token punctuation">.</span><span class="token function">vibrate</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

<span class="token comment">// 停止所有振动</span>
navigator<span class="token punctuation">.</span><span class="token function">vibrate</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,13),q={id:"bluetooth",tabindex:"-1"},x=n("a",{class:"header-anchor",href:"#bluetooth","aria-hidden":"true"},"#",-1),S=t(`<p>允许网页与蓝牙设备通信。适用于物联网（IoT）设备的连接和控制。</p><div class="hint-container warning"><p class="hint-container-title">注意</p><p>只支持 HTTPS 协议。</p></div><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// 请求连接蓝牙设备</span>
<span class="token keyword">const</span> device <span class="token operator">=</span> <span class="token keyword">await</span> navigator<span class="token punctuation">.</span>bluetooth<span class="token punctuation">.</span><span class="token function">requestDevice</span><span class="token punctuation">(</span><span class="token punctuation">{</span> filters<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> services<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;battery_service&quot;</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// 连接到设备的 GATT 服务器</span>
<span class="token keyword">const</span> server <span class="token operator">=</span> <span class="token keyword">await</span> device<span class="token punctuation">.</span>gatt<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment">// 获取电池服务</span>
<span class="token keyword">const</span> service <span class="token operator">=</span> <span class="token keyword">await</span> server<span class="token punctuation">.</span><span class="token function">getPrimaryService</span><span class="token punctuation">(</span><span class="token string">&quot;battery_service&quot;</span><span class="token punctuation">)</span>

<span class="token comment">// 获取电池电量特征值</span>
<span class="token keyword">const</span> characteristic <span class="token operator">=</span> <span class="token keyword">await</span> service<span class="token punctuation">.</span><span class="token function">getCharacteristic</span><span class="token punctuation">(</span><span class="token string">&quot;battery_level&quot;</span><span class="token punctuation">)</span>

<span class="token comment">// 读取电池电量</span>
<span class="token keyword">const</span> value <span class="token operator">=</span> <span class="token keyword">await</span> characteristic<span class="token punctuation">.</span><span class="token function">readValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> batteryLevel <span class="token operator">=</span> value<span class="token punctuation">.</span><span class="token function">getUint8</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>

<span class="token comment">// 断开连接处理</span>
device<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;gattserverdisconnected&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> <span class="token comment">/* ... */</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),E={id:"usb",tabindex:"-1"},_=n("a",{class:"header-anchor",href:"#usb","aria-hidden":"true"},"#",-1),T=t(`<p>允许网页与 USB 设备通信。适用于连接和控制 USB 外设。</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// 请求连接 USB 设备</span>
<span class="token keyword">const</span> device <span class="token operator">=</span> <span class="token keyword">await</span> navigator<span class="token punctuation">.</span>usb<span class="token punctuation">.</span><span class="token function">requestDevice</span><span class="token punctuation">(</span><span class="token punctuation">{</span> filters<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> vendorId<span class="token operator">:</span> <span class="token number">0x2341</span> <span class="token punctuation">}</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
device<span class="token punctuation">.</span>productName <span class="token comment">// &quot;Arduino Micro&quot;</span>
device<span class="token punctuation">.</span>manufacturerName <span class="token comment">// &quot;Arduino LLC&quot;</span>

<span class="token comment">// 连接到设备</span>
<span class="token keyword">await</span> device<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment">// 选择配置和接口</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>device<span class="token punctuation">.</span>configuration <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">await</span> device<span class="token punctuation">.</span><span class="token function">selectConfiguration</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">await</span> device<span class="token punctuation">.</span><span class="token function">claimInterface</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>

<span class="token comment">// 向设备发送数据</span>
<span class="token keyword">const</span> dataToSend <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Uint8Array</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0x01</span><span class="token punctuation">,</span> <span class="token number">0x02</span><span class="token punctuation">,</span> <span class="token number">0x03</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token keyword">await</span> device<span class="token punctuation">.</span><span class="token function">transferOut</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> dataToSend<span class="token punctuation">)</span>

<span class="token comment">// 从设备接收数据</span>
<span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> device<span class="token punctuation">.</span><span class="token function">transferIn</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">64</span><span class="token punctuation">)</span> <span class="token comment">// 接收 64 字节数据</span>
<span class="token keyword">const</span> receivedData <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Uint8Array</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>data<span class="token punctuation">.</span>buffer<span class="token punctuation">)</span>

<span class="token comment">// 断开连接处理</span>
device<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;disconnect&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> <span class="token comment">/* ... */</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="mediadevices" tabindex="-1"><a class="header-anchor" href="#mediadevices" aria-hidden="true">#</a> MediaDevices</h3><p>访问用户的媒体输入设备，如相机和麦克风。适用于视频聊天、录音等。</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">let</span> mediaStream

<span class="token keyword">const</span> <span class="token function-variable function">start</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// 获取用户的媒体流（摄像头、麦克风）</span>
  mediaStream <span class="token operator">=</span> <span class="token keyword">await</span> navigator<span class="token punctuation">.</span>mediaDevices<span class="token punctuation">.</span><span class="token function">getUserMedia</span><span class="token punctuation">(</span><span class="token punctuation">{</span> video<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> audio<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token comment">// 选择特定的设备</span>
  <span class="token comment">// mediaStream = await navigator.mediaDevices.getUserMedia({</span>
  <span class="token comment">//   video: { deviceId: &quot;your-video-device-id&quot; }, // 替换为实际的视频设备 ID</span>
  <span class="token comment">//   audio: { deviceId: &quot;your-audio-device-id&quot; }  // 替换为实际的音频设备 ID</span>
  <span class="token comment">// })</span>
  
  <span class="token comment">// 将媒体流设置为视频和音频元素的源</span>
  document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&quot;video&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>srcObject <span class="token operator">=</span> mediaStream
  document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&quot;audio&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>srcObject <span class="token operator">=</span> mediaStream
<span class="token punctuation">}</span>

<span class="token keyword">const</span> <span class="token function-variable function">show</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// 列出所有可用的媒体设备</span>
  <span class="token keyword">const</span> devices <span class="token operator">=</span> <span class="token keyword">await</span> navigator<span class="token punctuation">.</span>mediaDevices<span class="token punctuation">.</span><span class="token function">enumerateDevices</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  devices<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>device <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>device<span class="token punctuation">.</span>kind<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>device<span class="token punctuation">.</span>label<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> id = </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>device<span class="token punctuation">.</span>deviceId<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> <span class="token function-variable function">stop</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>mediaStream<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 停止所有媒体流轨道</span>
    mediaStream<span class="token punctuation">.</span><span class="token function">getTracks</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>track <span class="token operator">=&gt;</span> track<span class="token punctuation">.</span><span class="token function">stop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    
    <span class="token comment">// 清空视频和音频元素的源</span>
    document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&quot;video&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>srcObject <span class="token operator">=</span> <span class="token keyword">null</span>
    document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&quot;audio&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>srcObject <span class="token operator">=</span> <span class="token keyword">null</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="rtcpeerconnection" tabindex="-1"><a class="header-anchor" href="#rtcpeerconnection" aria-hidden="true">#</a> RTCPeerConnection</h3><p>实现实时媒体通信，如视频聊天和音频通话。支持点对点连接，减少延迟。</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">let</span> localStream
<span class="token keyword">let</span> pc1
<span class="token keyword">let</span> pc2

<span class="token keyword">const</span> <span class="token function-variable function">start</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// 获取本地视频流</span>
  localStream <span class="token operator">=</span> <span class="token keyword">await</span> navigator<span class="token punctuation">.</span>mediaDevices<span class="token punctuation">.</span><span class="token function">getUserMedia</span><span class="token punctuation">(</span><span class="token punctuation">{</span> video<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> audio<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
  document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&quot;localVideo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>srcObject <span class="token operator">=</span> localStream
<span class="token punctuation">}</span>

<span class="token keyword">const</span> <span class="token function-variable function">call</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> configuration <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token comment">// 建立两个对等连接</span>
  pc1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RTCPeerConnection</span><span class="token punctuation">(</span>configuration<span class="token punctuation">)</span>
  pc2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RTCPeerConnection</span><span class="token punctuation">(</span>configuration<span class="token punctuation">)</span>
  
  <span class="token comment">// 交换 ICE 候选者</span>
  pc1<span class="token punctuation">.</span><span class="token function-variable function">onicecandidate</span> <span class="token operator">=</span> <span class="token keyword">async</span> event <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">await</span> pc2<span class="token punctuation">.</span><span class="token function">addIceCandidate</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>candidate<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  pc2<span class="token punctuation">.</span><span class="token function-variable function">onicecandidate</span> <span class="token operator">=</span> <span class="token keyword">async</span> event <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">await</span> pc1<span class="token punctuation">.</span><span class="token function">addIceCandidate</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>candidate<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  
  <span class="token comment">// 处理接收到的远程流</span>
  pc2<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;track&quot;</span><span class="token punctuation">,</span> event <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// 将远程视频流显示在页面上</span>
    document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&quot;remoteVideo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>srcObject <span class="token operator">=</span> event<span class="token punctuation">.</span>streams<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  
  <span class="token comment">// 将本地视频流添加到 pc1 中</span>
  localStream<span class="token punctuation">.</span><span class="token function">getTracks</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>track <span class="token operator">=&gt;</span> pc1<span class="token punctuation">.</span><span class="token function">addTrack</span><span class="token punctuation">(</span>track<span class="token punctuation">,</span> localStream<span class="token punctuation">)</span><span class="token punctuation">)</span>
  
  <span class="token comment">// 创建一个 offer</span>
  <span class="token keyword">const</span> offer <span class="token operator">=</span> <span class="token keyword">await</span> pc1<span class="token punctuation">.</span><span class="token function">createOffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token comment">// 将 pc1 设置为本地描述</span>
  <span class="token keyword">await</span> pc1<span class="token punctuation">.</span><span class="token function">setLocalDescription</span><span class="token punctuation">(</span>offer<span class="token punctuation">)</span>
  <span class="token comment">// 将 pc1 设置为 pc2 的远程描述</span>
  <span class="token keyword">await</span> pc2<span class="token punctuation">.</span><span class="token function">setRemoteDescription</span><span class="token punctuation">(</span>offer<span class="token punctuation">)</span>
  
  <span class="token comment">// 创建一个 answer</span>
  <span class="token keyword">const</span> answer <span class="token operator">=</span> <span class="token keyword">await</span> pc2<span class="token punctuation">.</span><span class="token function">createAnswer</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token comment">// 将 pc2 设置为本地描述</span>
  <span class="token keyword">await</span> pc2<span class="token punctuation">.</span><span class="token function">setLocalDescription</span><span class="token punctuation">(</span>answer<span class="token punctuation">)</span>
  <span class="token comment">// 将 pc2 设置为 pc1 的远程描述</span>
  <span class="token keyword">await</span> pc1<span class="token punctuation">.</span><span class="token function">setRemoteDescription</span><span class="token punctuation">(</span>answer<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">// 挂断通话</span>
<span class="token keyword">const</span> <span class="token function-variable function">hangup</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  pc1<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  pc2<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  pc1 <span class="token operator">=</span> <span class="token keyword">null</span>
  pc2 <span class="token operator">=</span> <span class="token keyword">null</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8),I={id:"speechrecognition",tabindex:"-1"},C=n("a",{class:"header-anchor",href:"#speechrecognition","aria-hidden":"true"},"#",-1),L=t(`<p>将语音输入转换为文本。适用于语音控制和语音输入。</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// 兼容处理</span>
<span class="token keyword">const</span> SpeechRecognition <span class="token operator">=</span> window<span class="token punctuation">.</span>SpeechRecognition <span class="token operator">||</span> window<span class="token punctuation">.</span>webkitSpeechRecognition

<span class="token comment">// 创建语音识别实例</span>
<span class="token keyword">const</span> recognition <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SpeechRecognition</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment">// 设置识别的语言</span>
recognition<span class="token punctuation">.</span>lang <span class="token operator">=</span> <span class="token string">&quot;zh-CN&quot;</span>

<span class="token comment">// 设置连续识别模式</span>
recognition<span class="token punctuation">.</span>continuous <span class="token operator">=</span> <span class="token boolean">true</span>

<span class="token comment">// 设置中间结果</span>
recognition<span class="token punctuation">.</span>interimResults <span class="token operator">=</span> <span class="token boolean">true</span>

recognition<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;result&quot;</span><span class="token punctuation">,</span> event <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> interimTranscript <span class="token operator">=</span> <span class="token string">&quot;&quot;</span>
  <span class="token keyword">let</span> finalTranscript <span class="token operator">=</span> <span class="token string">&quot;&quot;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> event<span class="token punctuation">.</span>results<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 获取识别的文本</span>
    <span class="token keyword">const</span> transcript <span class="token operator">=</span> event<span class="token punctuation">.</span>results<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>transcript
    <span class="token keyword">if</span> <span class="token punctuation">(</span>event<span class="token punctuation">.</span>results<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>isFinal<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      finalTranscript <span class="token operator">+=</span> transcript
    <span class="token punctuation">}</span>
    <span class="token keyword">else</span> <span class="token punctuation">{</span>
      interimTranscript <span class="token operator">+=</span> transcript
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// 开始语音识别</span>
recognition<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),B={id:"speechsynthesis",tabindex:"-1"},A=n("a",{class:"header-anchor",href:"#speechsynthesis","aria-hidden":"true"},"#",-1),D=t(`<p>将文本转换为语音输出。适用于语音助手和无障碍访问。</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>speechSynthesis<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;voiceschanged&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> voices <span class="token operator">=</span> speechSynthesis<span class="token punctuation">.</span><span class="token function">getVoices</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&quot;voiceSelect&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">&quot;&quot;</span>
  voices<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>voice <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> option <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&quot;option&quot;</span><span class="token punctuation">)</span>
    option<span class="token punctuation">.</span>textContent <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>voice<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> (</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>voice<span class="token punctuation">.</span>lang<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">)</span><span class="token template-punctuation string">\`</span></span>
    option<span class="token punctuation">.</span>value <span class="token operator">=</span> voice<span class="token punctuation">.</span>name
    document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&quot;voiceSelect&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>option<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> <span class="token function-variable function">speak</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> text <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&quot;text&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value
  <span class="token keyword">if</span> <span class="token punctuation">(</span>text<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span> <span class="token keyword">return</span>
  
  <span class="token comment">// 创建语音合成实例</span>
  <span class="token keyword">const</span> utterance <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SpeechSynthesisUtterance</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span>
  <span class="token keyword">const</span> selectedVoiceName <span class="token operator">=</span> voiceSelect<span class="token punctuation">.</span>value
  <span class="token comment">// 列出所有可用的语音，并允许用户选择</span>
  <span class="token keyword">const</span> voices <span class="token operator">=</span> speechSynthesis<span class="token punctuation">.</span><span class="token function">getVoices</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> selectedVoice <span class="token operator">=</span> voices<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span>voice <span class="token operator">=&gt;</span> voice<span class="token punctuation">.</span>name <span class="token operator">===</span> selectedVoiceName<span class="token punctuation">)</span>
  utterance<span class="token punctuation">.</span>voice <span class="token operator">=</span> selectedVoice
  
  <span class="token comment">// 设置属性（可选）</span>
  utterance<span class="token punctuation">.</span>lang <span class="token operator">=</span> selectedVoice<span class="token punctuation">.</span>lang <span class="token comment">// 设置语言</span>
  utterance<span class="token punctuation">.</span>pitch <span class="token operator">=</span> <span class="token number">1</span>  <span class="token comment">// 设置语调</span>
  utterance<span class="token punctuation">.</span>rate <span class="token operator">=</span> <span class="token number">1</span>   <span class="token comment">// 设置语速</span>
  utterance<span class="token punctuation">.</span>volume <span class="token operator">=</span> <span class="token number">1</span> <span class="token comment">// 设置音量</span>
  
  <span class="token comment">// 开始朗读</span>
  speechSynthesis<span class="token punctuation">.</span><span class="token function">speak</span><span class="token punctuation">(</span>utterance<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> <span class="token function-variable function">stop</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// 停止朗读</span>
  speechSynthesis<span class="token punctuation">.</span><span class="token function">cancel</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="paymentrequest" tabindex="-1"><a class="header-anchor" href="#paymentrequest" aria-hidden="true">#</a> PaymentRequest</h3><p>简化在线支付流程。提供统一的支付界面和支付方法。</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// 创建支付请求</span>
<span class="token keyword">const</span> request <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PaymentRequest</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
  <span class="token comment">/* 支持的支付方式 */</span> <span class="token punctuation">{</span>
    supportedMethods<span class="token operator">:</span> <span class="token string">&quot;basic-card&quot;</span><span class="token punctuation">,</span>
    data<span class="token operator">:</span> <span class="token punctuation">{</span>
      supportedNetworks<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;visa&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;mastercard&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;amex&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      supportedTypes<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;debit&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;credit&quot;</span><span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">/* 支付详情 */</span> <span class="token punctuation">{</span>
  displayItems<span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      label<span class="token operator">:</span> <span class="token string">&#39;Product 1&#39;</span><span class="token punctuation">,</span>
      amount<span class="token operator">:</span> <span class="token punctuation">{</span> currency<span class="token operator">:</span> <span class="token string">&quot;USD&quot;</span><span class="token punctuation">,</span> value<span class="token operator">:</span> <span class="token string">&quot;10.00&quot;</span> <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      label<span class="token operator">:</span> <span class="token string">&#39;Product 2&#39;</span><span class="token punctuation">,</span>
      amount<span class="token operator">:</span> <span class="token punctuation">{</span> currency<span class="token operator">:</span> <span class="token string">&quot;USD&quot;</span><span class="token punctuation">,</span> value<span class="token operator">:</span> <span class="token string">&quot;20.00&quot;</span> <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  total<span class="token operator">:</span> <span class="token punctuation">{</span>
    label<span class="token operator">:</span> <span class="token string">&quot;Total&quot;</span><span class="token punctuation">,</span>
    amount<span class="token operator">:</span> <span class="token punctuation">{</span> currency<span class="token operator">:</span> <span class="token string">&quot;USD&quot;</span><span class="token punctuation">,</span> value<span class="token operator">:</span> <span class="token string">&quot;30.00&quot;</span> <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token comment">/* 支付选项 */</span> <span class="token punctuation">{</span>
  requestPayerName<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  requestPayerEmail<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  requestPayerPhone<span class="token operator">:</span> <span class="token boolean">true</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// 显示支付界面</span>
<span class="token keyword">const</span> paymentResponse <span class="token operator">=</span> <span class="token keyword">await</span> request<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment">// 处理支付响应</span>
<span class="token keyword">await</span> paymentResponse<span class="token punctuation">.</span><span class="token function">complete</span><span class="token punctuation">(</span><span class="token string">&quot;success&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="ambientlightsensor" tabindex="-1"><a class="header-anchor" href="#ambientlightsensor" aria-hidden="true">#</a> AmbientLightSensor</h3><p>访问设备的环境光传感器数据。适用于动态调整屏幕亮度和颜色。</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">if</span> <span class="token punctuation">(</span>window<span class="token punctuation">.</span>AmbientLightSensor<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// 创建环境光传感器实例</span>
  <span class="token keyword">const</span> sensor <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AmbientLightSensor</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  
  <span class="token comment">// 监听传感器数据</span>
  sensor<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;reading&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> lightLevel <span class="token operator">=</span> sensor<span class="token punctuation">.</span>illuminance
    document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;light-level&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>textContent <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Current Light Level: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>lightLevel<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> lux</span><span class="token template-punctuation string">\`</span></span>
    
    <span class="token comment">// 根据光照强度调整网页样式</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>lightLevel <span class="token operator">&lt;</span> <span class="token number">50</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>style<span class="token punctuation">.</span>backgroundColor <span class="token operator">=</span> <span class="token string">&quot;black&quot;</span>
      document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>style<span class="token punctuation">.</span>color <span class="token operator">=</span> <span class="token string">&quot;white&quot;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">else</span> <span class="token punctuation">{</span>
      document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>style<span class="token punctuation">.</span>backgroundColor <span class="token operator">=</span> <span class="token string">&quot;white&quot;</span>
      document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>style<span class="token punctuation">.</span>color <span class="token operator">=</span> <span class="token string">&quot;black&quot;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  
  <span class="token comment">// 开始传感器</span>
  sensor<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="connection" tabindex="-1"><a class="header-anchor" href="#connection" aria-hidden="true">#</a> Connection</h3><p>提供关于设备网络连接的信息，如速度和类型。适用于调整应用行为以适应网络状况。</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// 获取网络连接信息</span>
<span class="token keyword">const</span> connection <span class="token operator">=</span> navigator<span class="token punctuation">.</span>connection <span class="token operator">||</span> navigator<span class="token punctuation">.</span>mozConnection <span class="token operator">||</span> navigator<span class="token punctuation">.</span>webkitConnection
<span class="token comment">// 有效连接类型</span>
<span class="token keyword">let</span> effectiveConnectionType <span class="token operator">=</span> connection<span class="token punctuation">.</span>effectiveType
<span class="token comment">// 传输速度</span>
<span class="token keyword">let</span> downlinkSpeed <span class="token operator">=</span> connection<span class="token punctuation">.</span>downlink

<span class="token comment">// 监听网络状态变化事件</span>
connection<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;change&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  effectiveConnectionType <span class="token operator">=</span> connection<span class="token punctuation">.</span>effectiveType
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="gamepad" tabindex="-1"><a class="header-anchor" href="#gamepad" aria-hidden="true">#</a> Gamepad</h3><p>访问和使用游戏控制器的数据。适用于网页游戏开发。</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// 监听游戏控制器连接事件</span>
<span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;gamepadconnected&quot;</span><span class="token punctuation">,</span> event <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> gamepad <span class="token operator">=</span> event<span class="token punctuation">.</span>gamepad
  <span class="token keyword">const</span> gamepadId <span class="token operator">=</span> gamepad<span class="token punctuation">.</span>id
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// 检测游戏控制器按键状态</span>
<span class="token keyword">const</span> <span class="token function-variable function">checkGamepad</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> gamepads <span class="token operator">=</span> navigator<span class="token punctuation">.</span><span class="token function">getGamepads</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>gamepads<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> firstButtonPressed <span class="token operator">=</span> gamepads<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>buttons<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>pressed
  <span class="token punctuation">}</span>
  <span class="token function">requestAnimationFrame</span><span class="token punctuation">(</span>checkGamepad<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token function">checkGamepad</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,14);function N(P,R){const p=o("RouterLink"),e=o("Badge");return l(),u("div",null,[k,n("p",null,[a(p,{to:"/base/javascript.html#dom"},{default:c(()=>[s("DOM API | JavaScript")]),_:1})]),d,v,n("p",null,[a(p,{to:"/core/ajax.html#fetch"},{default:c(()=>[s("Fetch API | Ajax")]),_:1})]),m,n("h3",b,[g,s(" Screen Orientation "),a(e,{text:"实验性",type:"info"})]),h,n("h3",f,[y,s(" DeviceOrientation "),a(e,{text:"实验性",type:"info"})]),w,n("h3",q,[x,s(" Bluetooth "),a(e,{text:"实验性",type:"info"})]),S,n("h3",E,[_,s(" USB "),a(e,{text:"实验性",type:"info"})]),T,n("h3",I,[C,s(" SpeechRecognition "),a(e,{text:"实验性",type:"info"})]),L,n("h3",B,[A,s(" SpeechSynthesis "),a(e,{text:"实验性",type:"info"})]),D])}const M=i(r,[["render",N],["__file","html5.html.vue"]]);export{M as default};
